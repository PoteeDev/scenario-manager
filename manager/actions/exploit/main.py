from actions._base import BaseAction, Action
import os

from actions._base import ActionBase
import asyncio


class ExploitAction(ActionBase):
    async def __call__(self, *args, **kwargs):
        # await asyncio.sleep(0)
        rpc = await self.connect()
        for exploit in kwargs["service_info"]["exploits"]:
            result = 0
            if self.read("ping", *args) == 1:
                exploit_rounds = kwargs["service_info"]["exploits"][exploit]["rounds"]
                if kwargs["round"] in exploit_rounds:
                    request = {
                        "id": args[0],
                        "srv": args[1],
                        "script": kwargs["service_info"]["script"],
                        "args": ["exploit", ".".join(reversed(args)), exploit],
                    }
                    answer = await rpc.rpc_send("runner", request)
                    if answer:
                        result = 1

                    self.write("exploit", *args, exploit, result=result)
